// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.indigobio.test;

public final class Test {
  private Test() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EverythingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 f_int32 = 1;
    /**
     * <code>required int32 f_int32 = 1;</code>
     */
    boolean hasFInt32();
    /**
     * <code>required int32 f_int32 = 1;</code>
     */
    int getFInt32();

    // required int64 f_int64 = 2;
    /**
     * <code>required int64 f_int64 = 2;</code>
     */
    boolean hasFInt64();
    /**
     * <code>required int64 f_int64 = 2;</code>
     */
    long getFInt64();

    // required uint32 f_uint32 = 3;
    /**
     * <code>required uint32 f_uint32 = 3;</code>
     */
    boolean hasFUint32();
    /**
     * <code>required uint32 f_uint32 = 3;</code>
     */
    int getFUint32();

    // required uint64 f_uint64 = 4;
    /**
     * <code>required uint64 f_uint64 = 4;</code>
     */
    boolean hasFUint64();
    /**
     * <code>required uint64 f_uint64 = 4;</code>
     */
    long getFUint64();

    // required sint32 f_sint32 = 5;
    /**
     * <code>required sint32 f_sint32 = 5;</code>
     */
    boolean hasFSint32();
    /**
     * <code>required sint32 f_sint32 = 5;</code>
     */
    int getFSint32();

    // required sint64 f_sint64 = 6;
    /**
     * <code>required sint64 f_sint64 = 6;</code>
     */
    boolean hasFSint64();
    /**
     * <code>required sint64 f_sint64 = 6;</code>
     */
    long getFSint64();

    // required bool f_bool = 7;
    /**
     * <code>required bool f_bool = 7;</code>
     */
    boolean hasFBool();
    /**
     * <code>required bool f_bool = 7;</code>
     */
    boolean getFBool();

    // required .com.indigobio.test.Everything.State f_enum = 8;
    /**
     * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
     */
    boolean hasFEnum();
    /**
     * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
     */
    com.indigobio.test.Test.Everything.State getFEnum();

    // required fixed64 f_fixed64 = 9;
    /**
     * <code>required fixed64 f_fixed64 = 9;</code>
     */
    boolean hasFFixed64();
    /**
     * <code>required fixed64 f_fixed64 = 9;</code>
     */
    long getFFixed64();

    // required sfixed64 f_sfixed64 = 10;
    /**
     * <code>required sfixed64 f_sfixed64 = 10;</code>
     */
    boolean hasFSfixed64();
    /**
     * <code>required sfixed64 f_sfixed64 = 10;</code>
     */
    long getFSfixed64();

    // required double f_double = 11;
    /**
     * <code>required double f_double = 11;</code>
     */
    boolean hasFDouble();
    /**
     * <code>required double f_double = 11;</code>
     */
    double getFDouble();

    // required string f_string = 12;
    /**
     * <code>required string f_string = 12;</code>
     */
    boolean hasFString();
    /**
     * <code>required string f_string = 12;</code>
     */
    java.lang.String getFString();
    /**
     * <code>required string f_string = 12;</code>
     */
    com.google.protobuf.ByteString
        getFStringBytes();

    // required bytes f_bytes = 13;
    /**
     * <code>required bytes f_bytes = 13;</code>
     */
    boolean hasFBytes();
    /**
     * <code>required bytes f_bytes = 13;</code>
     */
    com.google.protobuf.ByteString getFBytes();
  }
  /**
   * Protobuf type {@code com.indigobio.test.Everything}
   */
  public static final class Everything extends
      com.google.protobuf.GeneratedMessage
      implements EverythingOrBuilder {
    // Use Everything.newBuilder() to construct.
    private Everything(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Everything(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Everything defaultInstance;
    public static Everything getDefaultInstance() {
      return defaultInstance;
    }

    public Everything getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Everything(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fInt32_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fInt64_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fUint32_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fUint64_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fSint32_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              fSint64_ = input.readSInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              fBool_ = input.readBool();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.indigobio.test.Test.Everything.State value = com.indigobio.test.Test.Everything.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                fEnum_ = value;
              }
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              fFixed64_ = input.readFixed64();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fSfixed64_ = input.readSFixed64();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              fDouble_ = input.readDouble();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              fString_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              fBytes_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.indigobio.test.Test.internal_static_com_indigobio_test_Everything_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.indigobio.test.Test.internal_static_com_indigobio_test_Everything_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.indigobio.test.Test.Everything.class, com.indigobio.test.Test.Everything.Builder.class);
    }

    public static com.google.protobuf.Parser<Everything> PARSER =
        new com.google.protobuf.AbstractParser<Everything>() {
      public Everything parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Everything(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Everything> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code com.indigobio.test.Everything.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ACTIVE = 1;</code>
       */
      ACTIVE(0, 1),
      /**
       * <code>INACTIVE = 2;</code>
       */
      INACTIVE(1, 2),
      ;

      /**
       * <code>ACTIVE = 1;</code>
       */
      public static final int ACTIVE_VALUE = 1;
      /**
       * <code>INACTIVE = 2;</code>
       */
      public static final int INACTIVE_VALUE = 2;


      public final int getNumber() { return value; }

      public static State valueOf(int value) {
        switch (value) {
          case 1: return ACTIVE;
          case 2: return INACTIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<State>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.indigobio.test.Test.Everything.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private State(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.indigobio.test.Everything.State)
    }

    private int bitField0_;
    // required int32 f_int32 = 1;
    public static final int F_INT32_FIELD_NUMBER = 1;
    private int fInt32_;
    /**
     * <code>required int32 f_int32 = 1;</code>
     */
    public boolean hasFInt32() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 f_int32 = 1;</code>
     */
    public int getFInt32() {
      return fInt32_;
    }

    // required int64 f_int64 = 2;
    public static final int F_INT64_FIELD_NUMBER = 2;
    private long fInt64_;
    /**
     * <code>required int64 f_int64 = 2;</code>
     */
    public boolean hasFInt64() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 f_int64 = 2;</code>
     */
    public long getFInt64() {
      return fInt64_;
    }

    // required uint32 f_uint32 = 3;
    public static final int F_UINT32_FIELD_NUMBER = 3;
    private int fUint32_;
    /**
     * <code>required uint32 f_uint32 = 3;</code>
     */
    public boolean hasFUint32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 f_uint32 = 3;</code>
     */
    public int getFUint32() {
      return fUint32_;
    }

    // required uint64 f_uint64 = 4;
    public static final int F_UINT64_FIELD_NUMBER = 4;
    private long fUint64_;
    /**
     * <code>required uint64 f_uint64 = 4;</code>
     */
    public boolean hasFUint64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 f_uint64 = 4;</code>
     */
    public long getFUint64() {
      return fUint64_;
    }

    // required sint32 f_sint32 = 5;
    public static final int F_SINT32_FIELD_NUMBER = 5;
    private int fSint32_;
    /**
     * <code>required sint32 f_sint32 = 5;</code>
     */
    public boolean hasFSint32() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required sint32 f_sint32 = 5;</code>
     */
    public int getFSint32() {
      return fSint32_;
    }

    // required sint64 f_sint64 = 6;
    public static final int F_SINT64_FIELD_NUMBER = 6;
    private long fSint64_;
    /**
     * <code>required sint64 f_sint64 = 6;</code>
     */
    public boolean hasFSint64() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required sint64 f_sint64 = 6;</code>
     */
    public long getFSint64() {
      return fSint64_;
    }

    // required bool f_bool = 7;
    public static final int F_BOOL_FIELD_NUMBER = 7;
    private boolean fBool_;
    /**
     * <code>required bool f_bool = 7;</code>
     */
    public boolean hasFBool() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool f_bool = 7;</code>
     */
    public boolean getFBool() {
      return fBool_;
    }

    // required .com.indigobio.test.Everything.State f_enum = 8;
    public static final int F_ENUM_FIELD_NUMBER = 8;
    private com.indigobio.test.Test.Everything.State fEnum_;
    /**
     * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
     */
    public boolean hasFEnum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
     */
    public com.indigobio.test.Test.Everything.State getFEnum() {
      return fEnum_;
    }

    // required fixed64 f_fixed64 = 9;
    public static final int F_FIXED64_FIELD_NUMBER = 9;
    private long fFixed64_;
    /**
     * <code>required fixed64 f_fixed64 = 9;</code>
     */
    public boolean hasFFixed64() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required fixed64 f_fixed64 = 9;</code>
     */
    public long getFFixed64() {
      return fFixed64_;
    }

    // required sfixed64 f_sfixed64 = 10;
    public static final int F_SFIXED64_FIELD_NUMBER = 10;
    private long fSfixed64_;
    /**
     * <code>required sfixed64 f_sfixed64 = 10;</code>
     */
    public boolean hasFSfixed64() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required sfixed64 f_sfixed64 = 10;</code>
     */
    public long getFSfixed64() {
      return fSfixed64_;
    }

    // required double f_double = 11;
    public static final int F_DOUBLE_FIELD_NUMBER = 11;
    private double fDouble_;
    /**
     * <code>required double f_double = 11;</code>
     */
    public boolean hasFDouble() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required double f_double = 11;</code>
     */
    public double getFDouble() {
      return fDouble_;
    }

    // required string f_string = 12;
    public static final int F_STRING_FIELD_NUMBER = 12;
    private java.lang.Object fString_;
    /**
     * <code>required string f_string = 12;</code>
     */
    public boolean hasFString() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required string f_string = 12;</code>
     */
    public java.lang.String getFString() {
      java.lang.Object ref = fString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string f_string = 12;</code>
     */
    public com.google.protobuf.ByteString
        getFStringBytes() {
      java.lang.Object ref = fString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes f_bytes = 13;
    public static final int F_BYTES_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString fBytes_;
    /**
     * <code>required bytes f_bytes = 13;</code>
     */
    public boolean hasFBytes() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required bytes f_bytes = 13;</code>
     */
    public com.google.protobuf.ByteString getFBytes() {
      return fBytes_;
    }

    private void initFields() {
      fInt32_ = 0;
      fInt64_ = 0L;
      fUint32_ = 0;
      fUint64_ = 0L;
      fSint32_ = 0;
      fSint64_ = 0L;
      fBool_ = false;
      fEnum_ = com.indigobio.test.Test.Everything.State.ACTIVE;
      fFixed64_ = 0L;
      fSfixed64_ = 0L;
      fDouble_ = 0D;
      fString_ = "";
      fBytes_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFInt32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFInt64()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFUint32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFUint64()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFSint32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFSint64()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFBool()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFEnum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFFixed64()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFSfixed64()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFDouble()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFString()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fInt32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fInt64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fUint32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, fUint64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, fSint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt64(6, fSint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, fBool_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, fEnum_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed64(9, fFixed64_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSFixed64(10, fSfixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, fDouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getFStringBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, fBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fInt32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fInt64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fUint32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, fUint64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, fSint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, fSint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, fBool_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, fEnum_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(9, fFixed64_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(10, fSfixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, fDouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getFStringBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, fBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.indigobio.test.Test.Everything parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.indigobio.test.Test.Everything parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.indigobio.test.Test.Everything parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.indigobio.test.Test.Everything parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.indigobio.test.Test.Everything parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.indigobio.test.Test.Everything parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.indigobio.test.Test.Everything parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.indigobio.test.Test.Everything parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.indigobio.test.Test.Everything parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.indigobio.test.Test.Everything parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.indigobio.test.Test.Everything prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.indigobio.test.Everything}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.indigobio.test.Test.EverythingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.indigobio.test.Test.internal_static_com_indigobio_test_Everything_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.indigobio.test.Test.internal_static_com_indigobio_test_Everything_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.indigobio.test.Test.Everything.class, com.indigobio.test.Test.Everything.Builder.class);
      }

      // Construct using com.indigobio.test.Test.Everything.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fInt32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fInt64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fUint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fUint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        fSint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        fSint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        fBool_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        fEnum_ = com.indigobio.test.Test.Everything.State.ACTIVE;
        bitField0_ = (bitField0_ & ~0x00000080);
        fFixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        fSfixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        fDouble_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        fString_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        fBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.indigobio.test.Test.internal_static_com_indigobio_test_Everything_descriptor;
      }

      public com.indigobio.test.Test.Everything getDefaultInstanceForType() {
        return com.indigobio.test.Test.Everything.getDefaultInstance();
      }

      public com.indigobio.test.Test.Everything build() {
        com.indigobio.test.Test.Everything result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.indigobio.test.Test.Everything buildPartial() {
        com.indigobio.test.Test.Everything result = new com.indigobio.test.Test.Everything(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fInt32_ = fInt32_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fInt64_ = fInt64_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fUint32_ = fUint32_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fUint64_ = fUint64_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fSint32_ = fSint32_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fSint64_ = fSint64_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fBool_ = fBool_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fEnum_ = fEnum_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fFixed64_ = fFixed64_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fSfixed64_ = fSfixed64_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.fDouble_ = fDouble_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.fString_ = fString_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fBytes_ = fBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.indigobio.test.Test.Everything) {
          return mergeFrom((com.indigobio.test.Test.Everything)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.indigobio.test.Test.Everything other) {
        if (other == com.indigobio.test.Test.Everything.getDefaultInstance()) return this;
        if (other.hasFInt32()) {
          setFInt32(other.getFInt32());
        }
        if (other.hasFInt64()) {
          setFInt64(other.getFInt64());
        }
        if (other.hasFUint32()) {
          setFUint32(other.getFUint32());
        }
        if (other.hasFUint64()) {
          setFUint64(other.getFUint64());
        }
        if (other.hasFSint32()) {
          setFSint32(other.getFSint32());
        }
        if (other.hasFSint64()) {
          setFSint64(other.getFSint64());
        }
        if (other.hasFBool()) {
          setFBool(other.getFBool());
        }
        if (other.hasFEnum()) {
          setFEnum(other.getFEnum());
        }
        if (other.hasFFixed64()) {
          setFFixed64(other.getFFixed64());
        }
        if (other.hasFSfixed64()) {
          setFSfixed64(other.getFSfixed64());
        }
        if (other.hasFDouble()) {
          setFDouble(other.getFDouble());
        }
        if (other.hasFString()) {
          bitField0_ |= 0x00000800;
          fString_ = other.fString_;
          onChanged();
        }
        if (other.hasFBytes()) {
          setFBytes(other.getFBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFInt32()) {
          
          return false;
        }
        if (!hasFInt64()) {
          
          return false;
        }
        if (!hasFUint32()) {
          
          return false;
        }
        if (!hasFUint64()) {
          
          return false;
        }
        if (!hasFSint32()) {
          
          return false;
        }
        if (!hasFSint64()) {
          
          return false;
        }
        if (!hasFBool()) {
          
          return false;
        }
        if (!hasFEnum()) {
          
          return false;
        }
        if (!hasFFixed64()) {
          
          return false;
        }
        if (!hasFSfixed64()) {
          
          return false;
        }
        if (!hasFDouble()) {
          
          return false;
        }
        if (!hasFString()) {
          
          return false;
        }
        if (!hasFBytes()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.indigobio.test.Test.Everything parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.indigobio.test.Test.Everything) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 f_int32 = 1;
      private int fInt32_ ;
      /**
       * <code>required int32 f_int32 = 1;</code>
       */
      public boolean hasFInt32() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 f_int32 = 1;</code>
       */
      public int getFInt32() {
        return fInt32_;
      }
      /**
       * <code>required int32 f_int32 = 1;</code>
       */
      public Builder setFInt32(int value) {
        bitField0_ |= 0x00000001;
        fInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 f_int32 = 1;</code>
       */
      public Builder clearFInt32() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fInt32_ = 0;
        onChanged();
        return this;
      }

      // required int64 f_int64 = 2;
      private long fInt64_ ;
      /**
       * <code>required int64 f_int64 = 2;</code>
       */
      public boolean hasFInt64() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 f_int64 = 2;</code>
       */
      public long getFInt64() {
        return fInt64_;
      }
      /**
       * <code>required int64 f_int64 = 2;</code>
       */
      public Builder setFInt64(long value) {
        bitField0_ |= 0x00000002;
        fInt64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 f_int64 = 2;</code>
       */
      public Builder clearFInt64() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fInt64_ = 0L;
        onChanged();
        return this;
      }

      // required uint32 f_uint32 = 3;
      private int fUint32_ ;
      /**
       * <code>required uint32 f_uint32 = 3;</code>
       */
      public boolean hasFUint32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 f_uint32 = 3;</code>
       */
      public int getFUint32() {
        return fUint32_;
      }
      /**
       * <code>required uint32 f_uint32 = 3;</code>
       */
      public Builder setFUint32(int value) {
        bitField0_ |= 0x00000004;
        fUint32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 f_uint32 = 3;</code>
       */
      public Builder clearFUint32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fUint32_ = 0;
        onChanged();
        return this;
      }

      // required uint64 f_uint64 = 4;
      private long fUint64_ ;
      /**
       * <code>required uint64 f_uint64 = 4;</code>
       */
      public boolean hasFUint64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 f_uint64 = 4;</code>
       */
      public long getFUint64() {
        return fUint64_;
      }
      /**
       * <code>required uint64 f_uint64 = 4;</code>
       */
      public Builder setFUint64(long value) {
        bitField0_ |= 0x00000008;
        fUint64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 f_uint64 = 4;</code>
       */
      public Builder clearFUint64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fUint64_ = 0L;
        onChanged();
        return this;
      }

      // required sint32 f_sint32 = 5;
      private int fSint32_ ;
      /**
       * <code>required sint32 f_sint32 = 5;</code>
       */
      public boolean hasFSint32() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required sint32 f_sint32 = 5;</code>
       */
      public int getFSint32() {
        return fSint32_;
      }
      /**
       * <code>required sint32 f_sint32 = 5;</code>
       */
      public Builder setFSint32(int value) {
        bitField0_ |= 0x00000010;
        fSint32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 f_sint32 = 5;</code>
       */
      public Builder clearFSint32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fSint32_ = 0;
        onChanged();
        return this;
      }

      // required sint64 f_sint64 = 6;
      private long fSint64_ ;
      /**
       * <code>required sint64 f_sint64 = 6;</code>
       */
      public boolean hasFSint64() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required sint64 f_sint64 = 6;</code>
       */
      public long getFSint64() {
        return fSint64_;
      }
      /**
       * <code>required sint64 f_sint64 = 6;</code>
       */
      public Builder setFSint64(long value) {
        bitField0_ |= 0x00000020;
        fSint64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint64 f_sint64 = 6;</code>
       */
      public Builder clearFSint64() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fSint64_ = 0L;
        onChanged();
        return this;
      }

      // required bool f_bool = 7;
      private boolean fBool_ ;
      /**
       * <code>required bool f_bool = 7;</code>
       */
      public boolean hasFBool() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool f_bool = 7;</code>
       */
      public boolean getFBool() {
        return fBool_;
      }
      /**
       * <code>required bool f_bool = 7;</code>
       */
      public Builder setFBool(boolean value) {
        bitField0_ |= 0x00000040;
        fBool_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool f_bool = 7;</code>
       */
      public Builder clearFBool() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fBool_ = false;
        onChanged();
        return this;
      }

      // required .com.indigobio.test.Everything.State f_enum = 8;
      private com.indigobio.test.Test.Everything.State fEnum_ = com.indigobio.test.Test.Everything.State.ACTIVE;
      /**
       * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
       */
      public boolean hasFEnum() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
       */
      public com.indigobio.test.Test.Everything.State getFEnum() {
        return fEnum_;
      }
      /**
       * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
       */
      public Builder setFEnum(com.indigobio.test.Test.Everything.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        fEnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.indigobio.test.Everything.State f_enum = 8;</code>
       */
      public Builder clearFEnum() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fEnum_ = com.indigobio.test.Test.Everything.State.ACTIVE;
        onChanged();
        return this;
      }

      // required fixed64 f_fixed64 = 9;
      private long fFixed64_ ;
      /**
       * <code>required fixed64 f_fixed64 = 9;</code>
       */
      public boolean hasFFixed64() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required fixed64 f_fixed64 = 9;</code>
       */
      public long getFFixed64() {
        return fFixed64_;
      }
      /**
       * <code>required fixed64 f_fixed64 = 9;</code>
       */
      public Builder setFFixed64(long value) {
        bitField0_ |= 0x00000100;
        fFixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 f_fixed64 = 9;</code>
       */
      public Builder clearFFixed64() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fFixed64_ = 0L;
        onChanged();
        return this;
      }

      // required sfixed64 f_sfixed64 = 10;
      private long fSfixed64_ ;
      /**
       * <code>required sfixed64 f_sfixed64 = 10;</code>
       */
      public boolean hasFSfixed64() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required sfixed64 f_sfixed64 = 10;</code>
       */
      public long getFSfixed64() {
        return fSfixed64_;
      }
      /**
       * <code>required sfixed64 f_sfixed64 = 10;</code>
       */
      public Builder setFSfixed64(long value) {
        bitField0_ |= 0x00000200;
        fSfixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed64 f_sfixed64 = 10;</code>
       */
      public Builder clearFSfixed64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fSfixed64_ = 0L;
        onChanged();
        return this;
      }

      // required double f_double = 11;
      private double fDouble_ ;
      /**
       * <code>required double f_double = 11;</code>
       */
      public boolean hasFDouble() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required double f_double = 11;</code>
       */
      public double getFDouble() {
        return fDouble_;
      }
      /**
       * <code>required double f_double = 11;</code>
       */
      public Builder setFDouble(double value) {
        bitField0_ |= 0x00000400;
        fDouble_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double f_double = 11;</code>
       */
      public Builder clearFDouble() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fDouble_ = 0D;
        onChanged();
        return this;
      }

      // required string f_string = 12;
      private java.lang.Object fString_ = "";
      /**
       * <code>required string f_string = 12;</code>
       */
      public boolean hasFString() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required string f_string = 12;</code>
       */
      public java.lang.String getFString() {
        java.lang.Object ref = fString_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string f_string = 12;</code>
       */
      public com.google.protobuf.ByteString
          getFStringBytes() {
        java.lang.Object ref = fString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string f_string = 12;</code>
       */
      public Builder setFString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        fString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string f_string = 12;</code>
       */
      public Builder clearFString() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fString_ = getDefaultInstance().getFString();
        onChanged();
        return this;
      }
      /**
       * <code>required string f_string = 12;</code>
       */
      public Builder setFStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        fString_ = value;
        onChanged();
        return this;
      }

      // required bytes f_bytes = 13;
      private com.google.protobuf.ByteString fBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes f_bytes = 13;</code>
       */
      public boolean hasFBytes() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required bytes f_bytes = 13;</code>
       */
      public com.google.protobuf.ByteString getFBytes() {
        return fBytes_;
      }
      /**
       * <code>required bytes f_bytes = 13;</code>
       */
      public Builder setFBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        fBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes f_bytes = 13;</code>
       */
      public Builder clearFBytes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fBytes_ = getDefaultInstance().getFBytes();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.indigobio.test.Everything)
    }

    static {
      defaultInstance = new Everything(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.indigobio.test.Everything)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_indigobio_test_Everything_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_indigobio_test_Everything_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\022\022com.indigobio.test\"\273\002\n\nEve" +
      "rything\022\017\n\007f_int32\030\001 \002(\005\022\017\n\007f_int64\030\002 \002(" +
      "\003\022\020\n\010f_uint32\030\003 \002(\r\022\020\n\010f_uint64\030\004 \002(\004\022\020\n" +
      "\010f_sint32\030\005 \002(\021\022\020\n\010f_sint64\030\006 \002(\022\022\016\n\006f_b" +
      "ool\030\007 \002(\010\0224\n\006f_enum\030\010 \002(\0162$.com.indigobi" +
      "o.test.Everything.State\022\021\n\tf_fixed64\030\t \002" +
      "(\006\022\022\n\nf_sfixed64\030\n \002(\020\022\020\n\010f_double\030\013 \002(\001" +
      "\022\020\n\010f_string\030\014 \002(\t\022\017\n\007f_bytes\030\r \002(\014\"!\n\005S" +
      "tate\022\n\n\006ACTIVE\020\001\022\014\n\010INACTIVE\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_indigobio_test_Everything_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_indigobio_test_Everything_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_indigobio_test_Everything_descriptor,
              new java.lang.String[] { "FInt32", "FInt64", "FUint32", "FUint64", "FSint32", "FSint64", "FBool", "FEnum", "FFixed64", "FSfixed64", "FDouble", "FString", "FBytes", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
